#!/usr/bin/env bash
set -euo pipefail
shopt -s extglob

main() {
  script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" && cd $script_dir
  # Path to use for the checklist configuration
  export CONFIG_FILE=$(mktemp)
  # Path for cloning git repos
  export REPO_CLONES=$(mktemp -d)

  source ./scripts/ui.sh
  source ./scripts/bash_functions.sh

  distro=$(detect_distro) # Detect the distro that's being used
  [[ "$distro" != "arch" ]] && [[ "$distro" != "arch" ]] && printf "Unsupported package manager detected.\n" >&2 && return 1

  enable_raw_mode # Start the ui
  trap disable_raw_mode EXIT INT TERM
  while true; do
    render_menu
    if ! handle_input; then
      break
    fi
  done
  disable_raw_mode
  trap - EXIT INT TERM
  write_config "$script_dir" # End of the ui script

  source $CONFIG_FILE # Get the results from the checklist GUI

  # Package preset selection
  [[ ${dwm} == "on" ]] && printf "dwm_preset=\"%s\"\n" "$(prompt $'Select a dwm/X11 preset:\n\t1: Around 1080p\n\t2: Around 1440p\n' 2)" >>"$CONFIG_FILE"

  sudo -v # Switch to sudo

  if [[ ${distro} == "arch" ]]; then
    source ./scripts/arch/paccmds.sh
    gitupdate
    pacupdate

    # The variables for the script is the same as the label without special characters and spaces (caps sensitive)
    [[ ${TerminalPackages} == "on" ]] && ./scripts/arch/install_bash_pkgs.sh
    [[ ${Neovim} == "on" ]] && ./scripts/arch/install_nvim.sh
    [[ ${AURHelperparu} == "on" ]] && ./scripts/arch/install_paru.sh
    if [[ ${WindowManager} == "on" ]]; then
      ./scripts/arch/install_wm_setup.sh
      ./scripts/arch/install_alacritty.sh
      [[ ${Hyprland} == "on" ]] && ./scripts/arch/install_hypr.sh
      [[ ${dwm} == "on" ]] && ./scripts/arch/install_X.sh
      ./scripts/arch/install_gui_basic.sh
    fi
    [[ ${ProfessionalAudio} == "on" ]] && ./scripts/arch/install_audio.sh
    [[ ${VirtualMachine} == "on" ]] && ./scripts/arch/install_qemuKVM.sh
    [[ ${keyd} == "on" ]] && pinn keyd && sudo mkdir -p /etc/keyd && sudo cp -f ./configs/keyd/default.conf /etc/keyd/default.conf
    [[ ${LaptopSetup} == "on" ]] && ./scripts/arch/laptop.sh

  elif [[ ${distro} == "debian" ]]; then
    printf "Very limited Debian options supported ..."
    source ./scripts/debian/debcmds.sh
    gitupdate
    aptupdate

    [[ ${TerminalPackages} == "on" ]] && ainn tmux starship fastfetch figlet timeshift
    [[ ${Neovim} == "on" ]] && ./scripts/debian/install_nvim.sh
  fi

  sys_reboot
}

main "$@"
